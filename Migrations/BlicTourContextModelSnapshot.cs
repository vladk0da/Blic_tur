// <auto-generated />
using System;
using Blic_tur.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blic_tur.Migrations
{
    [DbContext(typeof(BlicTourContext))]
    partial class BlicTourContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blic_tur.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<string>("Comment");

                    b.Property<string>("Number_of_the_car")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("TypeCar")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Blic_tur.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new { Id = new Guid("e9a7ed50-fd06-455c-a555-8156fb9be18e"), Title = "Днепр" },
                        new { Id = new Guid("66f36c7b-5b0f-4a99-8228-a4b04c5a1297"), Title = "Харьков" },
                        new { Id = new Guid("5d94f14a-540a-4dd5-8719-d098e1b5b4e3"), Title = "Киев" },
                        new { Id = new Guid("b405c00b-cf4a-4ee9-8ec9-d75f41f068d6"), Title = "Счастливцево" },
                        new { Id = new Guid("0c98ed05-f4e1-4170-b6a7-32c3b8128256"), Title = "Кирилловка" },
                        new { Id = new Guid("76ba56d8-585d-4f0b-9df4-62bc223c56f3"), Title = "Кривой Рог" },
                        new { Id = new Guid("c0d1ded0-c89f-4da8-ba3a-18d0b3a5e097"), Title = "Бердянск" },
                        new { Id = new Guid("7c98ee79-9204-4bbd-b33e-d2559547fcc8"), Title = "Железный Порт" },
                        new { Id = new Guid("dd3a805d-357d-4245-a02f-edf0fd42f2bb"), Title = "Лазурное" },
                        new { Id = new Guid("d42f4498-df67-4fc6-849e-dde60eaa42e4"), Title = "Скадовск" },
                        new { Id = new Guid("1784754a-a375-4593-bfe6-129fd9a05790"), Title = "Геническ" },
                        new { Id = new Guid("982555b4-d17b-4cb4-9814-df5990f3251b"), Title = "Одесса" }
                    );
                });

            modelBuilder.Entity("Blic_tur.Models.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NumberPhone")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("PasswordConfirm")
                        .IsRequired();

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Blic_tur.Models.Manager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NumberPhone")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("PasswordConfirm")
                        .IsRequired();

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Managers");

                    b.HasData(
                        new { Id = new Guid("36307e4a-e818-4454-9bd3-5083b09fb6e0"), Login = "kate1990", Name = "Катя", NumberPhone = "0504582074", Password = "kate1", PasswordConfirm = "kate1", SurName = "Титова" },
                        new { Id = new Guid("e7e05f58-d7c2-44c1-9124-02131dedc4f0"), Login = "alex007", Name = "Алексей", NumberPhone = "0671239060", Password = "alex123", PasswordConfirm = "alex123", SurName = "Шапошник" }
                    );
                });

            modelBuilder.Entity("Blic_tur.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<string>("Comment")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("DepartureDate");

                    b.Property<string>("FromPlaceInCity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<Guid>("RouteId");

                    b.Property<string>("ToPlaceInCity");

                    b.Property<int?>("TripId");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("TripId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Blic_tur.Models.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CityFromId");

                    b.Property<Guid>("CityToId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Img")
                        .IsRequired();

                    b.Property<int>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CityFromId");

                    b.HasIndex("CityToId");

                    b.ToTable("Routes");

                    b.HasData(
                        new { Id = new Guid("744173e5-1715-450b-b29c-520d2159050c"), CityFromId = new Guid("e9a7ed50-fd06-455c-a555-8156fb9be18e"), CityToId = new Guid("66f36c7b-5b0f-4a99-8228-a4b04c5a1297"), Description = "Сбор по городу по всем остановкам. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд Из Днепра в Харьков осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "3.jpg", Price = 185 },
                        new { Id = new Guid("1ebf301f-c8dd-4eec-af65-b984b19311ba"), CityFromId = new Guid("66f36c7b-5b0f-4a99-8228-a4b04c5a1297"), CityToId = new Guid("5d94f14a-540a-4dd5-8719-d098e1b5b4e3"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд из Харькова в Киев осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "2.jpg", Price = 270 },
                        new { Id = new Guid("aef457bc-7223-4385-b164-f83c356a36f3"), CityFromId = new Guid("5d94f14a-540a-4dd5-8719-d098e1b5b4e3"), CityToId = new Guid("e9a7ed50-fd06-455c-a555-8156fb9be18e"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд из Киева в Днепр осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "1.jpg", Price = 350 },
                        new { Id = new Guid("1923e42e-1c16-4648-be58-a9749397dc8e"), CityFromId = new Guid("76ba56d8-585d-4f0b-9df4-62bc223c56f3"), CityToId = new Guid("b405c00b-cf4a-4ee9-8ec9-d75f41f068d6"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд в Счастливцево осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "schastlivcevo.jpg", Price = 350 },
                        new { Id = new Guid("62e7d88e-b5cd-4aed-9676-9eced2fedf86"), CityFromId = new Guid("76ba56d8-585d-4f0b-9df4-62bc223c56f3"), CityToId = new Guid("0c98ed05-f4e1-4170-b6a7-32c3b8128256"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд в Кирилловку осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "kirillovka.jpg", Price = 430 },
                        new { Id = new Guid("9c6525bf-26ce-4ec9-8769-6448ac0159a0"), CityFromId = new Guid("76ba56d8-585d-4f0b-9df4-62bc223c56f3"), CityToId = new Guid("c0d1ded0-c89f-4da8-ba3a-18d0b3a5e097"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд в Бердянск осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "berdyansk.jpg", Price = 450 },
                        new { Id = new Guid("774551c0-20ea-4a51-b17c-5041cb687c1a"), CityFromId = new Guid("76ba56d8-585d-4f0b-9df4-62bc223c56f3"), CityToId = new Guid("7c98ee79-9204-4bbd-b33e-d2559547fcc8"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд в Железный порт осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "zheleznyjPort.jpg", Price = 370 },
                        new { Id = new Guid("bce3a87b-5d46-4f2d-b195-629b95e4eb4a"), CityFromId = new Guid("76ba56d8-585d-4f0b-9df4-62bc223c56f3"), CityToId = new Guid("dd3a805d-357d-4245-a02f-edf0fd42f2bb"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд в Лазурное осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "lazurnoe.jpg", Price = 350 },
                        new { Id = new Guid("54ff5a00-c8af-415f-8524-633b6ef43b47"), CityFromId = new Guid("76ba56d8-585d-4f0b-9df4-62bc223c56f3"), CityToId = new Guid("d42f4498-df67-4fc6-849e-dde60eaa42e4"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд в Скадовск осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "skadovsk.jpg", Price = 350 },
                        new { Id = new Guid("1f10553d-e2fc-45da-9b89-1e0f0080d6d6"), CityFromId = new Guid("76ba56d8-585d-4f0b-9df4-62bc223c56f3"), CityToId = new Guid("1784754a-a375-4593-bfe6-129fd9a05790"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд в Геническ осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "genichesk.jpg", Price = 350 },
                        new { Id = new Guid("e7920f9b-0b67-49ed-ab64-719e78f5ae89"), CityFromId = new Guid("76ba56d8-585d-4f0b-9df4-62bc223c56f3"), CityToId = new Guid("982555b4-d17b-4cb4-9814-df5990f3251b"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд в Одессу осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "odessa.jpg", Price = 400 },
                        new { Id = new Guid("58cc0c9d-0a9f-4660-9e7a-deebc46beca1"), CityFromId = new Guid("76ba56d8-585d-4f0b-9df4-62bc223c56f3"), CityToId = new Guid("66f36c7b-5b0f-4a99-8228-a4b04c5a1297"), Description = "Сбор по городу по всем остановкам. Доставляем к месту отдыха по адресу. Выезд утром с 4:00 до 5:00. Точное время отправления сообщаем за день с 16:00 до 18:00. Выезд вечером с  21:00 до 23:00. Точное время отправления сообщаем в день отъезда с 14:00 до 16:00. Проезд в Харьков осуществляется комфортабельными 18-местными микроавтобусами Sprinter и 8-местными Vito. Мягкий салон, кондиционер, DVD.", Img = "kharkov.jpg", Price = 250 }
                    );
                });

            modelBuilder.Entity("Blic_tur.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId");

                    b.Property<Guid?>("CarId1");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("DriverId");

                    b.Property<Guid?>("DriverId1");

                    b.HasKey("Id");

                    b.HasIndex("CarId1");

                    b.HasIndex("DriverId1");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("Blic_tur.Models.Order", b =>
                {
                    b.HasOne("Blic_tur.Models.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Blic_tur.Models.Trip")
                        .WithMany("Orders")
                        .HasForeignKey("TripId");
                });

            modelBuilder.Entity("Blic_tur.Models.Route", b =>
                {
                    b.HasOne("Blic_tur.Models.City", "CityFrom")
                        .WithMany()
                        .HasForeignKey("CityFromId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Blic_tur.Models.City", "CityTo")
                        .WithMany()
                        .HasForeignKey("CityToId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Blic_tur.Models.Trip", b =>
                {
                    b.HasOne("Blic_tur.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId1");

                    b.HasOne("Blic_tur.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId1");
                });
#pragma warning restore 612, 618
        }
    }
}
